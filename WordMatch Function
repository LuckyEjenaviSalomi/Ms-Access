Function WordMatch(Body_of_Text As String, findText As String, _
                Optional IsCaseSensitive As Boolean) As Integer 'Return the position of the Word
                
    Dim iStart As Long, iEnd As Long 'Start and End of `findText` in the `Body_of_Text`
    Dim extractedText As String
    
    WordMatch = 0
    
    'String compare Method
    Dim compareMethod As VbCompareMethod
    compareMethod = IIf(IsCaseSensitive, vbBinaryCompare, vbTextCompare)
    
    'Check if Word exist at all
    iStart = InStr(1, Body_of_Text, findText, compareMethod)
    If iStart = 0 Then Exit Function 'No Match, jump out - return False
    
    iEnd = InStr(iStart, Body_of_Text, " ") 'Find the position of the next space after the `findText`
    If iEnd = 0 Then iEnd = Len(Body_of_Text) + 1 ' + 1 to put imaginary space at the end
    
    'Extract the text from the body of text
    extractedText = Mid(Body_of_Text, iStart, (iEnd - iStart))
    
    'Return Value
    If StrComp(extractedText, findText, compareMethod) = 0 Then WordMatch = iStart
    
End Function
